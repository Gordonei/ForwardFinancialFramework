// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _vivado_activity_thread_HH_
#define _vivado_activity_thread_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp.h"
#include "vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp.h"
#include "vivado_activity_thread_fcmp_32ns_32ns_1_3.h"
#include "vivado_activity_thread_fexp_32ns_32ns_32_8_full_dsp.h"
#include "vivado_activity_thread_thread_result_buff_0.h"

namespace ap_rtl {

struct vivado_activity_thread : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > a_req_din;
    sc_in< sc_logic > a_req_full_n;
    sc_out< sc_logic > a_req_write;
    sc_in< sc_logic > a_rsp_empty_n;
    sc_out< sc_logic > a_rsp_read;
    sc_out< sc_lv<32> > a_address;
    sc_in< sc_lv<32> > a_datain;
    sc_out< sc_lv<32> > a_dataout;
    sc_out< sc_lv<32> > a_size;
    sc_in< sc_lv<32> > kernel_u_a_0_rfir;
    sc_in< sc_lv<32> > kernel_u_a_0_current_price;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_initial_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_rho;
    sc_in< sc_lv<32> > kernel_u_a_0_kappa;
    sc_in< sc_lv<32> > kernel_u_a_0_theta;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_1;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_1;
    sc_in< sc_lv<32> > kernel_o_a_0_second_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_out;
    sc_in< sc_lv<32> > kernel_o_a_0_down;
    sc_in< sc_lv<32> > kernel_o_a_0_strike_price;
    sc_in< sc_lv<32> > kernel_o_a_0_time_period;
    sc_in< sc_lv<32> > kernel_o_a_0_call;
    sc_in< sc_lv<32> > kernel_o_a_0_points;
    sc_in< sc_lv<32> > seed_0_s1;
    sc_in< sc_lv<32> > seed_0_s2;
    sc_in< sc_lv<32> > seed_0_s3;
    sc_in< sc_lv<32> > seed_0_offset;
    sc_in< sc_lv<32> > thread_result_0;


    // Module declarations
    vivado_activity_thread(sc_module_name name);
    SC_HAS_PROCESS(vivado_activity_thread);

    ~vivado_activity_thread();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    vivado_activity_thread_thread_result_buff_0* thread_result_buff_0_U;
    vivado_activity_thread_thread_result_buff_0* thread_result_buff_0_0_U;
    vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp<1,4,32,32,32>* vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp_U1;
    vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp<2,3,32,32,32>* vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp_U2;
    vivado_activity_thread_fcmp_32ns_32ns_1_3<3,3,32,32,1>* vivado_activity_thread_fcmp_32ns_32ns_1_3_U3;
    vivado_activity_thread_fexp_32ns_32ns_32_8_full_dsp<4,8,32,32,32>* vivado_activity_thread_fexp_32ns_32ns_32_8_full_dsp_U4;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<32> > thread_result_00data_reg;
    sc_signal< sc_logic > thread_result_00vld_reg;
    sc_signal< sc_logic > thread_result_00ack_out;
    sc_signal< sc_lv<32> > u_v_0_gamma_read_assign_reg_249;
    sc_signal< sc_lv<13> > pp_i_reg_261;
    sc_signal< sc_lv<10> > indvar_reg_283;
    sc_signal< sc_lv<32> > grp_fu_300_p2;
    sc_signal< sc_lv<32> > reg_318;
    sc_signal< sc_lv<32> > grp_fu_295_p2;
    sc_signal< sc_lv<32> > reg_324;
    sc_signal< sc_lv<1> > tmp_4_reg_481;
    sc_signal< sc_lv<1> > tmp_4_fu_328_p2;
    sc_signal< sc_lv<10> > p_2_fu_340_p2;
    sc_signal< sc_lv<10> > p_2_reg_489;
    sc_signal< sc_lv<1> > exitcond_i_fu_346_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_494;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i_reg_494_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i_reg_494_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_i_reg_494_pp0_it3;
    sc_signal< sc_lv<13> > pp_fu_352_p2;
    sc_signal< sc_lv<13> > pp_reg_498;
    sc_signal< sc_lv<32> > u_v_0_arr_0_gamma_reg_503;
    sc_signal< sc_lv<32> > grp_fu_313_p2;
    sc_signal< sc_lv<32> > tmp_6_i_reg_509;
    sc_signal< sc_lv<10> > p_1_fu_391_p2;
    sc_signal< sc_lv<10> > p_1_reg_523;
    sc_signal< sc_lv<64> > tmp_1_fu_397_p1;
    sc_signal< sc_lv<64> > tmp_1_reg_528;
    sc_signal< sc_lv<1> > exitcond_fu_385_p2;
    sc_signal< sc_lv<32> > a_addr_reg_538;
    sc_signal< sc_lv<1> > exitcond1_fu_421_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_543;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond1_reg_543_pp1_it1;
    sc_signal< bool > ap_sig_bdd_200;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_lv<10> > indvar_next_fu_427_p2;
    sc_signal< sc_lv<1> > isIter0_fu_438_p2;
    sc_signal< sc_lv<1> > isIter0_reg_557;
    sc_signal< sc_lv<1> > ap_reg_ppstg_isIter0_reg_557_pp1_it1;
    sc_signal< sc_lv<32> > thread_result_buff_0_q0;
    sc_signal< sc_lv<32> > thread_result_buff_0_load_reg_561;
    sc_signal< sc_lv<1> > exitcond2_i_fu_334_p2;
    sc_signal< sc_lv<10> > thread_result_buff_0_address0;
    sc_signal< sc_logic > thread_result_buff_0_ce0;
    sc_signal< sc_logic > thread_result_buff_0_we0;
    sc_signal< sc_lv<32> > thread_result_buff_0_d0;
    sc_signal< sc_lv<10> > thread_result_buff_0_0_address0;
    sc_signal< sc_logic > thread_result_buff_0_0_ce0;
    sc_signal< sc_logic > thread_result_buff_0_0_we0;
    sc_signal< sc_lv<32> > thread_result_buff_0_0_d0;
    sc_signal< sc_lv<32> > thread_result_buff_0_0_q0;
    sc_signal< sc_lv<10> > p_i_reg_237;
    sc_signal< sc_lv<32> > u_v_0_gamma_read_assign_phi_fu_253_p4;
    sc_signal< sc_lv<13> > pp_i_phi_fu_265_p4;
    sc_signal< sc_lv<10> > p_reg_272;
    sc_signal< sc_lv<64> > tmp_i_fu_380_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_433_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_411_p1;
    sc_signal< sc_lv<32> > spot_price_0_i_fu_144;
    sc_signal< sc_lv<32> > grp_fu_295_p0;
    sc_signal< sc_lv<32> > grp_fu_295_p1;
    sc_signal< sc_lv<32> > grp_fu_300_p0;
    sc_signal< sc_lv<32> > grp_fu_300_p1;
    sc_signal< sc_lv<32> > grp_fu_307_p0;
    sc_signal< sc_lv<32> > grp_fu_307_p1;
    sc_signal< sc_lv<32> > grp_fu_313_p1;
    sc_signal< sc_lv<1> > grp_fu_307_p2;
    sc_signal< sc_lv<32> > o_v_0_arr_0_value_fu_368_p3;
    sc_signal< sc_lv<30> > tmp_fu_402_p4;
    sc_signal< sc_lv<2> > grp_fu_295_opcode;
    sc_signal< sc_logic > grp_fu_295_ce;
    sc_signal< sc_logic > grp_fu_300_ce;
    sc_signal< sc_logic > grp_fu_307_ce;
    sc_signal< sc_lv<5> > grp_fu_307_opcode;
    sc_signal< sc_lv<32> > grp_fu_313_p0;
    sc_signal< sc_logic > grp_fu_313_ce;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_pp0_stg0_fsm_7;
    static const sc_lv<5> ap_ST_pp0_stg1_fsm_8;
    static const sc_lv<5> ap_ST_pp0_stg2_fsm_9;
    static const sc_lv<5> ap_ST_pp0_stg3_fsm_10;
    static const sc_lv<5> ap_ST_st23_fsm_11;
    static const sc_lv<5> ap_ST_st24_fsm_12;
    static const sc_lv<5> ap_ST_st25_fsm_13;
    static const sc_lv<5> ap_ST_st26_fsm_14;
    static const sc_lv<5> ap_ST_st27_fsm_15;
    static const sc_lv<5> ap_ST_st28_fsm_16;
    static const sc_lv<5> ap_ST_st29_fsm_17;
    static const sc_lv<5> ap_ST_pp1_stg0_fsm_18;
    static const sc_lv<5> ap_ST_st33_fsm_19;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_3E8;
    static const sc_lv<32> ap_const_lv32_39800000;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_3E8;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address();
    void thread_a_dataout();
    void thread_a_req_din();
    void thread_a_req_write();
    void thread_a_rsp_read();
    void thread_a_size();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_200();
    void thread_exitcond1_fu_421_p2();
    void thread_exitcond2_i_fu_334_p2();
    void thread_exitcond_fu_385_p2();
    void thread_exitcond_i_fu_346_p2();
    void thread_grp_fu_295_ce();
    void thread_grp_fu_295_opcode();
    void thread_grp_fu_295_p0();
    void thread_grp_fu_295_p1();
    void thread_grp_fu_300_ce();
    void thread_grp_fu_300_p0();
    void thread_grp_fu_300_p1();
    void thread_grp_fu_307_ce();
    void thread_grp_fu_307_opcode();
    void thread_grp_fu_307_p0();
    void thread_grp_fu_307_p1();
    void thread_grp_fu_313_ce();
    void thread_grp_fu_313_p0();
    void thread_grp_fu_313_p1();
    void thread_indvar_next_fu_427_p2();
    void thread_isIter0_fu_438_p2();
    void thread_o_v_0_arr_0_value_fu_368_p3();
    void thread_p_1_fu_391_p2();
    void thread_p_2_fu_340_p2();
    void thread_pp_fu_352_p2();
    void thread_pp_i_phi_fu_265_p4();
    void thread_thread_result_00ack_out();
    void thread_thread_result_buff_0_0_address0();
    void thread_thread_result_buff_0_0_ce0();
    void thread_thread_result_buff_0_0_d0();
    void thread_thread_result_buff_0_0_we0();
    void thread_thread_result_buff_0_address0();
    void thread_thread_result_buff_0_ce0();
    void thread_thread_result_buff_0_d0();
    void thread_thread_result_buff_0_we0();
    void thread_tmp_1_fu_397_p1();
    void thread_tmp_2_fu_433_p1();
    void thread_tmp_4_fu_328_p2();
    void thread_tmp_8_fu_411_p1();
    void thread_tmp_fu_402_p4();
    void thread_tmp_i_fu_380_p1();
    void thread_u_v_0_gamma_read_assign_phi_fu_253_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
