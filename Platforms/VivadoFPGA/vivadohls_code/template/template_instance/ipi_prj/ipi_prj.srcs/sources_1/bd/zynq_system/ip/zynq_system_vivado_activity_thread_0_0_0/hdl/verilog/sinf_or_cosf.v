// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sinf_or_cosf (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        t_in,
        do_cos,
        ap_return
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [31:0] t_in;
input   do_cos;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg   [0:0] ap_CS_fsm0 = 1'b0;
reg   [0:0] ap_CS_fsm1 = 1'b1;
reg   [0:0] ap_CS_fsm2 = 1'b1;
reg   [0:0] ap_CS_fsm3 = 1'b1;
reg   [0:0] ap_CS_fsm4 = 1'b1;
reg   [0:0] ap_CS_fsm5 = 1'b1;
reg   [0:0] ap_CS_fsm6 = 1'b1;
reg   [0:0] ap_CS_fsm7 = 1'b1;
reg   [0:0] ap_CS_fsm8 = 1'b1;
wire   [7:0] hls_sin_cos_K0_V_address0;
reg    hls_sin_cos_K0_V_ce0;
wire   [29:0] hls_sin_cos_K0_V_q0;
wire   [0:0] do_cos_read_read_fu_124_p2;
reg   [0:0] do_cos_read_reg_548;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it1;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it2;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it3;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it4;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it5;
reg   [0:0] ap_reg_ppstg_do_cos_read_reg_548_pp0_it6;
reg   [0:0] p_Result_s_reg_554;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it1;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it2;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it3;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it4;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it5;
reg   [0:0] ap_reg_ppstg_p_Result_s_reg_554_pp0_it6;
wire   [7:0] p_Result_11_fu_268_p4;
reg   [7:0] p_Result_11_reg_560;
reg   [7:0] ap_reg_ppstg_p_Result_11_reg_560_pp0_it1;
reg   [7:0] ap_reg_ppstg_p_Result_11_reg_560_pp0_it2;
reg   [7:0] ap_reg_ppstg_p_Result_11_reg_560_pp0_it3;
reg   [7:0] ap_reg_ppstg_p_Result_11_reg_560_pp0_it4;
reg   [7:0] ap_reg_ppstg_p_Result_11_reg_560_pp0_it5;
wire   [0:0] or_cond_fu_313_p2;
reg   [0:0] or_cond_reg_572;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it1;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it2;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it3;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it4;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it5;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it6;
reg   [0:0] ap_reg_ppstg_or_cond_reg_572_pp0_it7;
wire   [30:0] ain_V_fu_349_p4;
reg   [30:0] ain_V_reg_586;
reg   [15:0] p_Result_64_i_reg_591;
reg   [14:0] p_Result_i_reg_596;
wire   [0:0] tmp_37_i_fu_379_p2;
reg   [0:0] tmp_37_i_reg_601;
reg   [0:0] ap_reg_ppstg_tmp_37_i_reg_601_pp0_it7;
wire   [7:0] tmp_38_i_fu_398_p3;
reg   [7:0] tmp_38_i_reg_605;
reg   [7:0] ap_reg_ppstg_tmp_38_i_reg_605_pp0_it7;
wire   [0:0] tmp_i1_fu_405_p2;
reg   [0:0] tmp_i1_reg_610;
reg   [0:0] ap_reg_ppstg_tmp_i1_reg_610_pp0_it7;
reg   [31:0] tmp_121_i_fu_448_p3;
wire   [30:0] tmp_128_i_fu_472_p2;
wire   [31:0] shift_2_1_i_fu_483_p2;
wire   [0:0] tmp_129_i_fu_477_p2;
wire   [30:0] tmp_128_1_i_fu_489_p2;
wire   [31:0] ret_i_i_i_fu_509_p1;
wire   [30:0] ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it7;
reg   [30:0] ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it8;
wire   [31:0] ap_reg_phiprechg_shift_1_i_reg_157pp0_it7;
reg   [31:0] ap_reg_phiprechg_shift_1_i_reg_157pp0_it8;
wire   [7:0] phitmp_i_fu_527_p2;
reg   [7:0] ap_reg_phiprechg_out_exp_V_reg_166pp0_it8;
reg   [7:0] out_exp_V_phi_fu_170_p4;
wire   [7:0] ap_reg_phiprechg_out_exp_V_reg_166pp0_it6;
reg   [7:0] ap_reg_phiprechg_out_exp_V_reg_166pp0_it7;
wire   [0:0] ap_reg_phiprechg_p_Result_12_reg_177pp0_it7;
reg   [0:0] ap_reg_phiprechg_p_Result_12_reg_177pp0_it8;
wire   [3:0] p_Result_17_fu_495_p3;
wire   [31:0] ret_i_i_fu_543_p1;
reg   [31:0] ap_reg_phiprechg_p_s_reg_238pp0_it8;
reg   [31:0] p_s_phi_fu_243_p8;
reg   [31:0] ap_reg_phiprechg_p_s_reg_238pp0_it7;
wire   [31:0] ap_reg_phiprechg_p_s_reg_238pp0_it6;
wire   [63:0] tmp_s_fu_296_p1;
wire   [31:0] p_Val2_s_fu_256_p1;
wire   [0:0] sin_basis_fu_282_p0;
wire   [0:0] sin_basis_fu_282_p2;
wire   [7:0] p_Result_16_fu_288_p3;
wire   [22:0] p_Result_2_fu_278_p1;
wire   [0:0] tmp_4_fu_301_p2;
wire   [0:0] tmp_5_fu_307_p2;
wire   [30:0] p_Val2_2_fu_322_p3;
wire   [30:0] OP2_V_3_cast_fu_334_p0;
wire   [30:0] grp_fu_338_p0;
wire   [30:0] grp_fu_338_p1;
wire   [61:0] grp_fu_338_p2;
wire   [0:0] closepath_fu_344_p2;
wire   [7:0] p_i_op_op_fu_385_p2;
wire   [7:0] tmp_12_i_op_fu_390_p3;
wire   [16:0] tmp_i_fu_410_p3;
wire   [15:0] tmp_3_i_fu_429_p3;
wire   [31:0] p_Result_61_i_fu_417_p5;
wire   [31:0] p_Result_4_fu_436_p5;
reg   [31:0] tmp_121_1_i_fu_460_p3;
wire   [30:0] tmp_fu_456_p1;
wire   [30:0] tmp_21_fu_468_p1;
wire   [31:0] p_Result_18_fu_502_p3;
wire   [7:0] tmp_22_fu_523_p1;
wire   [22:0] p_Val2_12_fu_513_p4;
wire   [31:0] p_Result_19_fu_533_p4;
reg    grp_fu_338_ce;
reg   [0:0] ap_NS_fsm0;
reg   [0:0] ap_NS_fsm1;
reg   [0:0] ap_NS_fsm2;
reg   [0:0] ap_NS_fsm3;
reg   [0:0] ap_NS_fsm4;
reg   [0:0] ap_NS_fsm5;
reg   [0:0] ap_NS_fsm6;
reg   [0:0] ap_NS_fsm7;
reg   [0:0] ap_NS_fsm8;
wire   [61:0] grp_fu_338_p00;
reg    ap_sig_bdd_116;
reg    ap_sig_bdd_151;
reg    ap_sig_bdd_360;
reg    ap_sig_bdd_365;
reg    ap_sig_bdd_217;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm0_0 = 1'b0;
parameter    ap_ST_st2_fsm1_1 = 1'b0;
parameter    ap_ST_st3_fsm2_1 = 1'b0;
parameter    ap_ST_st4_fsm3_1 = 1'b0;
parameter    ap_ST_st5_fsm4_1 = 1'b0;
parameter    ap_ST_st6_fsm5_1 = 1'b0;
parameter    ap_ST_st7_fsm6_1 = 1'b0;
parameter    ap_ST_st8_fsm7_1 = 1'b0;
parameter    ap_ST_st9_fsm8_1 = 1'b0;
parameter    ap_ST_st0_fsm1_0 = 1'b1;
parameter    ap_ST_st0_fsm2_0 = 1'b1;
parameter    ap_ST_st0_fsm3_0 = 1'b1;
parameter    ap_ST_st0_fsm4_0 = 1'b1;
parameter    ap_ST_st0_fsm5_0 = 1'b1;
parameter    ap_ST_st0_fsm6_0 = 1'b1;
parameter    ap_ST_st0_fsm7_0 = 1'b1;
parameter    ap_ST_st0_fsm8_0 = 1'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv4_3 = 4'b11;
parameter    ap_const_lv4_4 = 4'b100;
parameter    ap_const_lv4_5 = 4'b101;
parameter    ap_const_lv4_6 = 4'b110;
parameter    ap_const_lv4_9 = 4'b1001;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv4_C = 4'b1100;
parameter    ap_const_lv4_2 = 4'b10;
parameter    ap_const_lv4_7 = 4'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_D = 4'b1101;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_7FFFFFFF = 32'b1111111111111111111111111111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv8_7E = 8'b1111110;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv8_F0 = 8'b11110000;
parameter    ap_const_lv8_6D = 8'b1101101;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_true = 1'b1;


sinf_or_cosf_hls_sin_cos_K0_V #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_sin_cos_K0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( hls_sin_cos_K0_V_address0 ),
    .ce0( hls_sin_cos_K0_V_ce0 ),
    .q0( hls_sin_cos_K0_V_q0 )
);

vivado_activity_thread_mul_31ns_31s_62_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
vivado_activity_thread_mul_31ns_31s_62_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_338_p0 ),
    .din1( grp_fu_338_p1 ),
    .ce( grp_fu_338_ce ),
    .dout( grp_fu_338_p2 )
);



/// the current state (ap_CS_fsm0) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm0
    if (ap_rst == 1'b1) begin
        ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
    end else begin
        ap_CS_fsm0 <= ap_NS_fsm0;
    end
end

/// the current state (ap_CS_fsm1) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm1
    if (ap_rst == 1'b1) begin
        ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
    end else begin
        ap_CS_fsm1 <= ap_NS_fsm1;
    end
end

/// the current state (ap_CS_fsm2) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm2
    if (ap_rst == 1'b1) begin
        ap_CS_fsm2 <= ap_ST_st0_fsm2_0;
    end else begin
        ap_CS_fsm2 <= ap_NS_fsm2;
    end
end

/// the current state (ap_CS_fsm3) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm3
    if (ap_rst == 1'b1) begin
        ap_CS_fsm3 <= ap_ST_st0_fsm3_0;
    end else begin
        ap_CS_fsm3 <= ap_NS_fsm3;
    end
end

/// the current state (ap_CS_fsm4) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm4
    if (ap_rst == 1'b1) begin
        ap_CS_fsm4 <= ap_ST_st0_fsm4_0;
    end else begin
        ap_CS_fsm4 <= ap_NS_fsm4;
    end
end

/// the current state (ap_CS_fsm5) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm5
    if (ap_rst == 1'b1) begin
        ap_CS_fsm5 <= ap_ST_st0_fsm5_0;
    end else begin
        ap_CS_fsm5 <= ap_NS_fsm5;
    end
end

/// the current state (ap_CS_fsm6) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm6
    if (ap_rst == 1'b1) begin
        ap_CS_fsm6 <= ap_ST_st0_fsm6_0;
    end else begin
        ap_CS_fsm6 <= ap_NS_fsm6;
    end
end

/// the current state (ap_CS_fsm7) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm7
    if (ap_rst == 1'b1) begin
        ap_CS_fsm7 <= ap_ST_st0_fsm7_0;
    end else begin
        ap_CS_fsm7 <= ap_NS_fsm7;
    end
end

/// the current state (ap_CS_fsm8) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm8
    if (ap_rst == 1'b1) begin
        ap_CS_fsm8 <= ap_ST_st0_fsm8_0;
    end else begin
        ap_CS_fsm8 <= ap_NS_fsm8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_116) begin
        if (~(tmp_37_i_fu_379_p2 == ap_const_lv1_0)) begin
            ap_reg_phiprechg_out_exp_V_reg_166pp0_it7[0] <= 1'b0;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_out_exp_V_reg_166pp0_it7[0] <= ap_reg_phiprechg_out_exp_V_reg_166pp0_it6[0];
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_7) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_8) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_5) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_4) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_A) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_2) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_B) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_D)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_5) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_4) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_A) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_B) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_9) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_6) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_3) & ~(p_Result_17_fu_495_p3 == ap_const_lv4_C)))) begin
        ap_reg_phiprechg_p_Result_12_reg_177pp0_it8 <= ap_const_lv1_0;
    end else if ((((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_3)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_4)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_5)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_6)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_9)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_A)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_B)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & ~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_C)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_2)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_4)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_5)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_7)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_8)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_A)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_B)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & (p_Result_17_fu_495_p3 == ap_const_lv4_D)))) begin
        ap_reg_phiprechg_p_Result_12_reg_177pp0_it8 <= ap_const_lv1_1;
    end else if (((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_phiprechg_p_Result_12_reg_177pp0_it8 <= ap_reg_phiprechg_p_Result_12_reg_177pp0_it7;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_151) begin
        if (~(ap_const_lv1_0 == tmp_129_i_fu_477_p2)) begin
            ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it8 <= tmp_128_1_i_fu_489_p2;
        end else if ((ap_const_lv1_0 == tmp_129_i_fu_477_p2)) begin
            ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it8 <= tmp_128_i_fu_472_p2;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it8 <= ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it7;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_116) begin
        if (ap_sig_bdd_365) begin
            ap_reg_phiprechg_p_s_reg_238pp0_it7[0] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[1] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[2] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[3] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[4] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[5] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[6] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[7] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[8] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[9] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[10] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[11] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[12] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[13] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[14] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[15] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[16] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[17] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[18] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[19] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[20] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[21] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[22] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[23] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[24] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[25] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[26] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[27] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[28] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[29] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[30] <= 1'b1;
        end else if (ap_sig_bdd_360) begin
            ap_reg_phiprechg_p_s_reg_238pp0_it7[0] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[1] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[2] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[3] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[4] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[5] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[6] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[7] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[8] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[9] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[10] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[11] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[12] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[13] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[14] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[15] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[16] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[17] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[18] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[19] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[20] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[21] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[22] <= 1'b0;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[23] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[24] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[25] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[26] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[27] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[28] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[29] <= 1'b1;
            ap_reg_phiprechg_p_s_reg_238pp0_it7[30] <= 1'b0;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_p_s_reg_238pp0_it7[0] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[0];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[1] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[1];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[2] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[2];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[3] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[3];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[4] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[4];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[5] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[5];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[6] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[6];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[7] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[7];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[8] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[8];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[9] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[9];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[10] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[10];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[11] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[11];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[12] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[12];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[13] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[13];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[14] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[14];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[15] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[15];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[16] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[16];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[17] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[17];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[18] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[18];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[19] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[19];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[20] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[20];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[21] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[21];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[22] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[22];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[23] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[23];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[24] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[24];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[25] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[25];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[26] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[26];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[27] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[27];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[28] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[28];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[29] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[29];
            ap_reg_phiprechg_p_s_reg_238pp0_it7[30] <= ap_reg_phiprechg_p_s_reg_238pp0_it6[30];
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_151) begin
        if (ap_sig_bdd_217) begin
            ap_reg_phiprechg_p_s_reg_238pp0_it8 <= ret_i_i_i_fu_509_p1;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_p_s_reg_238pp0_it8 <= ap_reg_phiprechg_p_s_reg_238pp0_it7;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_151) begin
        if (~(ap_const_lv1_0 == tmp_129_i_fu_477_p2)) begin
            ap_reg_phiprechg_shift_1_i_reg_157pp0_it8 <= shift_2_1_i_fu_483_p2;
        end else if ((ap_const_lv1_0 == tmp_129_i_fu_477_p2)) begin
            ap_reg_phiprechg_shift_1_i_reg_157pp0_it8 <= tmp_121_i_fu_448_p3;
        end else if ((ap_true == ap_true)) begin
            ap_reg_phiprechg_shift_1_i_reg_157pp0_it8 <= ap_reg_phiprechg_shift_1_i_reg_157pp0_it7;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & (ap_const_logic_1 == ap_ce))) begin
        ain_V_reg_586 <= {{grp_fu_338_p2[ap_const_lv32_3D : ap_const_lv32_1F]}};
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 <= ap_reg_ppstg_do_cos_read_reg_548_pp0_it5;
        ap_reg_ppstg_or_cond_reg_572_pp0_it6 <= ap_reg_ppstg_or_cond_reg_572_pp0_it5;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it6 <= ap_reg_ppstg_p_Result_s_reg_554_pp0_it5;
        p_Result_64_i_reg_591 <= {{grp_fu_338_p2[ap_const_lv32_3D : ap_const_lv32_2E]}};
        p_Result_i_reg_596 <= {{grp_fu_338_p2[ap_const_lv32_2D : ap_const_lv32_1F]}};
        tmp_37_i_reg_601 <= tmp_37_i_fu_379_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_phiprechg_out_exp_V_reg_166pp0_it8[0] <= ap_reg_phiprechg_out_exp_V_reg_166pp0_it7[0];
        ap_reg_ppstg_or_cond_reg_572_pp0_it7 <= ap_reg_ppstg_or_cond_reg_572_pp0_it6;
        ap_reg_ppstg_tmp_37_i_reg_601_pp0_it7 <= tmp_37_i_reg_601;
        ap_reg_ppstg_tmp_38_i_reg_605_pp0_it7 <= tmp_38_i_reg_605;
        ap_reg_ppstg_tmp_i1_reg_610_pp0_it7 <= tmp_i1_reg_610;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm1_1 == ap_CS_fsm1) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it1 <= do_cos_read_reg_548;
        ap_reg_ppstg_or_cond_reg_572_pp0_it1 <= or_cond_reg_572;
        ap_reg_ppstg_p_Result_11_reg_560_pp0_it1 <= p_Result_11_reg_560;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it1 <= p_Result_s_reg_554;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it2 <= ap_reg_ppstg_do_cos_read_reg_548_pp0_it1;
        ap_reg_ppstg_or_cond_reg_572_pp0_it2 <= ap_reg_ppstg_or_cond_reg_572_pp0_it1;
        ap_reg_ppstg_p_Result_11_reg_560_pp0_it2 <= ap_reg_ppstg_p_Result_11_reg_560_pp0_it1;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it2 <= ap_reg_ppstg_p_Result_s_reg_554_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it3 <= ap_reg_ppstg_do_cos_read_reg_548_pp0_it2;
        ap_reg_ppstg_or_cond_reg_572_pp0_it3 <= ap_reg_ppstg_or_cond_reg_572_pp0_it2;
        ap_reg_ppstg_p_Result_11_reg_560_pp0_it3 <= ap_reg_ppstg_p_Result_11_reg_560_pp0_it2;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it3 <= ap_reg_ppstg_p_Result_s_reg_554_pp0_it2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it4 <= ap_reg_ppstg_do_cos_read_reg_548_pp0_it3;
        ap_reg_ppstg_or_cond_reg_572_pp0_it4 <= ap_reg_ppstg_or_cond_reg_572_pp0_it3;
        ap_reg_ppstg_p_Result_11_reg_560_pp0_it4 <= ap_reg_ppstg_p_Result_11_reg_560_pp0_it3;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it4 <= ap_reg_ppstg_p_Result_s_reg_554_pp0_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & (ap_const_logic_1 == ap_ce))) begin
        ap_reg_ppstg_do_cos_read_reg_548_pp0_it5 <= ap_reg_ppstg_do_cos_read_reg_548_pp0_it4;
        ap_reg_ppstg_or_cond_reg_572_pp0_it5 <= ap_reg_ppstg_or_cond_reg_572_pp0_it4;
        ap_reg_ppstg_p_Result_11_reg_560_pp0_it5 <= ap_reg_ppstg_p_Result_11_reg_560_pp0_it4;
        ap_reg_ppstg_p_Result_s_reg_554_pp0_it5 <= ap_reg_ppstg_p_Result_s_reg_554_pp0_it4;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st1_fsm0_0 == ap_CS_fsm0) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_1 == ap_ce))) begin
        do_cos_read_reg_548 <= do_cos_read_read_fu_124_p2;
        or_cond_reg_572 <= or_cond_fu_313_p2;
        p_Result_11_reg_560 <= {{p_Val2_s_fu_256_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
        p_Result_s_reg_554 <= p_Val2_s_fu_256_p1[ap_const_lv32_1F];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & (ap_const_logic_1 == ap_ce) & (tmp_37_i_fu_379_p2 == ap_const_lv1_0))) begin
        tmp_38_i_reg_605 <= tmp_38_i_fu_398_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & (ap_const_logic_1 == ap_ce) & (ap_reg_ppstg_or_cond_reg_572_pp0_it5 == ap_const_lv1_0))) begin
        tmp_i1_reg_610 <= tmp_i1_fu_405_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm8 or ap_ce)
begin
    if (((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & (ap_const_logic_1 == ap_ce))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm0 or ap_CS_fsm1 or ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm0_0 == ap_CS_fsm0) & (ap_ST_st0_fsm1_0 == ap_CS_fsm1) & (ap_ST_st0_fsm2_0 == ap_CS_fsm2) & (ap_ST_st0_fsm3_0 == ap_CS_fsm3) & (ap_ST_st0_fsm4_0 == ap_CS_fsm4) & (ap_ST_st0_fsm5_0 == ap_CS_fsm5) & (ap_ST_st0_fsm6_0 == ap_CS_fsm6) & (ap_ST_st0_fsm7_0 == ap_CS_fsm7) & (ap_ST_st0_fsm8_0 == ap_CS_fsm8))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_start or ap_CS_fsm0 or ap_ce)
begin
    if (((ap_ST_st1_fsm0_0 == ap_CS_fsm0) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_1 == ap_ce))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_338_ce assign process. ///
always @ (ap_CS_fsm1 or ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_ce)
begin
    if (((ap_const_logic_1 == ap_ce) & ((ap_ST_st2_fsm1_1 == ap_CS_fsm1) | (ap_ST_st3_fsm2_1 == ap_CS_fsm2) | (ap_ST_st4_fsm3_1 == ap_CS_fsm3) | (ap_ST_st5_fsm4_1 == ap_CS_fsm4) | (ap_ST_st6_fsm5_1 == ap_CS_fsm5) | (ap_ST_st7_fsm6_1 == ap_CS_fsm6)))) begin
        grp_fu_338_ce = ap_const_logic_1;
    end else begin
        grp_fu_338_ce = ap_const_logic_0;
    end
end

/// hls_sin_cos_K0_V_ce0 assign process. ///
always @ (ap_start or ap_CS_fsm0 or ap_ce)
begin
    if (((ap_ST_st1_fsm0_0 == ap_CS_fsm0) & ~(ap_start == ap_const_logic_0) & (ap_const_logic_1 == ap_ce))) begin
        hls_sin_cos_K0_V_ce0 = ap_const_logic_1;
    end else begin
        hls_sin_cos_K0_V_ce0 = ap_const_logic_0;
    end
end

/// out_exp_V_phi_fu_170_p4 assign process. ///
always @ (ap_CS_fsm8 or ap_reg_ppstg_tmp_37_i_reg_601_pp0_it7 or phitmp_i_fu_527_p2 or ap_reg_phiprechg_out_exp_V_reg_166pp0_it8)
begin
    if (((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & (ap_reg_ppstg_tmp_37_i_reg_601_pp0_it7 == ap_const_lv1_0))) begin
        out_exp_V_phi_fu_170_p4 = phitmp_i_fu_527_p2;
    end else begin
        out_exp_V_phi_fu_170_p4 = ap_reg_phiprechg_out_exp_V_reg_166pp0_it8;
    end
end

/// p_s_phi_fu_243_p8 assign process. ///
always @ (ap_CS_fsm8 or ap_reg_ppstg_or_cond_reg_572_pp0_it7 or ap_reg_ppstg_tmp_i1_reg_610_pp0_it7 or ret_i_i_fu_543_p1 or ap_reg_phiprechg_p_s_reg_238pp0_it8)
begin
    if (((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & (ap_reg_ppstg_or_cond_reg_572_pp0_it7 == ap_const_lv1_0) & (ap_const_lv1_0 == ap_reg_ppstg_tmp_i1_reg_610_pp0_it7))) begin
        p_s_phi_fu_243_p8 = ret_i_i_fu_543_p1;
    end else begin
        p_s_phi_fu_243_p8 = ap_reg_phiprechg_p_s_reg_238pp0_it8;
    end
end
always @ (ap_CS_fsm1 or ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm2)
        ap_ST_st3_fsm2_1 : 
            if (((ap_ST_st2_fsm1_1 == ap_CS_fsm1) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm3_0 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm2 = ap_ST_st3_fsm2_1;
            end else begin
                ap_NS_fsm2 = ap_ST_st0_fsm2_0;
            end
        ap_ST_st0_fsm2_0 : 
            if (((ap_ST_st2_fsm1_1 == ap_CS_fsm1) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm2_0 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm3_0 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm2 = ap_ST_st3_fsm2_1;
            end else begin
                ap_NS_fsm2 = ap_ST_st0_fsm2_0;
            end
        default : 
            ap_NS_fsm2 = 'bx;
    endcase
end
always @ (ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm3)
        ap_ST_st4_fsm3_1 : 
            if (((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm3 = ap_ST_st4_fsm3_1;
            end else begin
                ap_NS_fsm3 = ap_ST_st0_fsm3_0;
            end
        ap_ST_st0_fsm3_0 : 
            if (((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm3_0 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm3 = ap_ST_st4_fsm3_1;
            end else begin
                ap_NS_fsm3 = ap_ST_st0_fsm3_0;
            end
        default : 
            ap_NS_fsm3 = 'bx;
    endcase
end
always @ (ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm6)
        ap_ST_st7_fsm6_1 : 
            if (((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm6 = ap_ST_st7_fsm6_1;
            end else begin
                ap_NS_fsm6 = ap_ST_st0_fsm6_0;
            end
        ap_ST_st0_fsm6_0 : 
            if (((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm6 = ap_ST_st7_fsm6_1;
            end else begin
                ap_NS_fsm6 = ap_ST_st0_fsm6_0;
            end
        default : 
            ap_NS_fsm6 = 'bx;
    endcase
end
always @ (ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm8)
        ap_ST_st9_fsm8_1 : 
            if (((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce))) begin
                ap_NS_fsm8 = ap_ST_st9_fsm8_1;
            end else if (((ap_const_logic_1 == ap_ce) & (((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ~(ap_ST_st8_fsm7_1 == ap_CS_fsm7)))) begin
                ap_NS_fsm8 = ap_ST_st0_fsm8_0;
            end else begin
                ap_NS_fsm8 = ap_ST_st9_fsm8_1;
            end
        ap_ST_st0_fsm8_0 : 
            if (((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm8 = ap_ST_st9_fsm8_1;
            end else begin
                ap_NS_fsm8 = ap_ST_st0_fsm8_0;
            end
        default : 
            ap_NS_fsm8 = 'bx;
    endcase
end
always @ (ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm4)
        ap_ST_st5_fsm4_1 : 
            if (((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm4 = ap_ST_st5_fsm4_1;
            end else begin
                ap_NS_fsm4 = ap_ST_st0_fsm4_0;
            end
        ap_ST_st0_fsm4_0 : 
            if (((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm4 = ap_ST_st5_fsm4_1;
            end else begin
                ap_NS_fsm4 = ap_ST_st0_fsm4_0;
            end
        default : 
            ap_NS_fsm4 = 'bx;
    endcase
end
always @ (ap_start or ap_CS_fsm0 or ap_CS_fsm1 or ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm0)
        ap_ST_st1_fsm0_0 : 
            ap_NS_fsm0 = ap_ST_st1_fsm0_0;
        default : 
            ap_NS_fsm0 = 'bx;
    endcase
end
always @ (ap_start or ap_CS_fsm0 or ap_CS_fsm1 or ap_CS_fsm2 or ap_CS_fsm3 or ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm1)
        ap_ST_st2_fsm1_1 : 
            if (((ap_ST_st1_fsm0_0 == ap_CS_fsm0) & ~((ap_start == ap_const_logic_0) | ~(ap_const_logic_1 == ap_ce)) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm2_0 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm3_0 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            end else begin
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            end
        ap_ST_st0_fsm1_0 : 
            if (((ap_ST_st1_fsm0_0 == ap_CS_fsm0) & ~((ap_start == ap_const_logic_0) | ~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm1_0 == ap_CS_fsm1) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st2_fsm1_1 == ap_CS_fsm1) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm2_0 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st3_fsm2_1 == ap_CS_fsm2) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm3_0 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st4_fsm3_1 == ap_CS_fsm3) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm4_0 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm1 = ap_ST_st2_fsm1_1;
            end else begin
                ap_NS_fsm1 = ap_ST_st0_fsm1_0;
            end
        default : 
            ap_NS_fsm1 = 'bx;
    endcase
end
always @ (ap_CS_fsm4 or ap_CS_fsm5 or ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm5)
        ap_ST_st6_fsm5_1 : 
            if (((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm5 = ap_ST_st6_fsm5_1;
            end else begin
                ap_NS_fsm5 = ap_ST_st0_fsm5_0;
            end
        ap_ST_st0_fsm5_0 : 
            if (((ap_ST_st5_fsm4_1 == ap_CS_fsm4) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm5_0 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st6_fsm5_1 == ap_CS_fsm5) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm6_0 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm5 = ap_ST_st6_fsm5_1;
            end else begin
                ap_NS_fsm5 = ap_ST_st0_fsm5_0;
            end
        default : 
            ap_NS_fsm5 = 'bx;
    endcase
end
always @ (ap_CS_fsm6 or ap_CS_fsm7 or ap_CS_fsm8 or ap_ce)
begin
    case (ap_CS_fsm7)
        ap_ST_st8_fsm7_1 : 
            if (((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & (ap_const_logic_1 == ap_ce) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm7 = ap_ST_st8_fsm7_1;
            end else begin
                ap_NS_fsm7 = ap_ST_st0_fsm7_0;
            end
        ap_ST_st0_fsm7_0 : 
            if (((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & ~(~(ap_const_logic_1 == ap_ce) | ((ap_ST_st0_fsm7_0 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st0_fsm8_0 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce)) | ((ap_ST_st9_fsm8_1 == ap_CS_fsm8) & ~(ap_const_logic_1 == ap_ce))))) begin
                ap_NS_fsm7 = ap_ST_st8_fsm7_1;
            end else begin
                ap_NS_fsm7 = ap_ST_st0_fsm7_0;
            end
        default : 
            ap_NS_fsm7 = 'bx;
    endcase
end
assign OP2_V_3_cast_fu_334_p0 = $signed(do_cos_read_reg_548);
assign ain_V_fu_349_p4 = {{grp_fu_338_p2[ap_const_lv32_3D : ap_const_lv32_1F]}};
assign ap_reg_phiprechg_out_exp_V_reg_166pp0_it6 = ap_const_lv8_1;
assign ap_reg_phiprechg_p_Result_12_reg_177pp0_it7 = ap_const_lv1_1;
assign ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it7 = ap_const_lv31_1;
assign ap_reg_phiprechg_p_s_reg_238pp0_it6 = ap_const_lv32_1;
assign ap_reg_phiprechg_shift_1_i_reg_157pp0_it7 = ap_const_lv32_1;
assign ap_return = p_s_phi_fu_243_p8;

/// ap_sig_bdd_116 assign process. ///
always @ (ap_CS_fsm6 or ap_ce)
begin
    ap_sig_bdd_116 = ((ap_ST_st7_fsm6_1 == ap_CS_fsm6) & (ap_const_logic_1 == ap_ce));
end

/// ap_sig_bdd_151 assign process. ///
always @ (ap_CS_fsm7 or ap_ce)
begin
    ap_sig_bdd_151 = ((ap_ST_st8_fsm7_1 == ap_CS_fsm7) & (ap_const_logic_1 == ap_ce));
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 or ap_reg_ppstg_or_cond_reg_572_pp0_it6)
begin
    ap_sig_bdd_217 = ((ap_reg_ppstg_do_cos_read_reg_548_pp0_it6 == ap_const_lv1_0) & ~(ap_reg_ppstg_or_cond_reg_572_pp0_it6 == ap_const_lv1_0));
end

/// ap_sig_bdd_360 assign process. ///
always @ (ap_reg_ppstg_do_cos_read_reg_548_pp0_it5 or ap_reg_ppstg_or_cond_reg_572_pp0_it5)
begin
    ap_sig_bdd_360 = (~(ap_reg_ppstg_do_cos_read_reg_548_pp0_it5 == ap_const_lv1_0) & ~(ap_reg_ppstg_or_cond_reg_572_pp0_it5 == ap_const_lv1_0));
end

/// ap_sig_bdd_365 assign process. ///
always @ (ap_reg_ppstg_or_cond_reg_572_pp0_it5 or tmp_i1_fu_405_p2)
begin
    ap_sig_bdd_365 = ((ap_reg_ppstg_or_cond_reg_572_pp0_it5 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_i1_fu_405_p2));
end
assign closepath_fu_344_p2 = (ap_reg_ppstg_p_Result_11_reg_560_pp0_it5 < ap_const_lv8_7E? 1'b1: 1'b0);
assign do_cos_read_read_fu_124_p2 = do_cos;
assign grp_fu_338_p0 = grp_fu_338_p00;
assign grp_fu_338_p00 = $unsigned(OP2_V_3_cast_fu_334_p0);
assign grp_fu_338_p1 = p_Val2_2_fu_322_p3;
assign hls_sin_cos_K0_V_address0 = tmp_s_fu_296_p1;
assign or_cond_fu_313_p2 = (tmp_4_fu_301_p2 & tmp_5_fu_307_p2);
assign p_Result_11_fu_268_p4 = {{p_Val2_s_fu_256_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign p_Result_16_fu_288_p3 = {{sin_basis_fu_282_p2}, {ap_const_lv7_0}};
assign p_Result_17_fu_495_p3 = {{ap_reg_ppstg_p_Result_s_reg_554_pp0_it6}, {ap_const_lv3_0}};
assign p_Result_18_fu_502_p3 = {{ap_reg_ppstg_p_Result_s_reg_554_pp0_it6}, {ap_const_lv31_0}};
assign p_Result_19_fu_533_p4 = {{{ap_reg_phiprechg_p_Result_12_reg_177pp0_it8}, {out_exp_V_phi_fu_170_p4}}, {p_Val2_12_fu_513_p4}};
assign p_Result_2_fu_278_p1 = p_Val2_s_fu_256_p1[22:0];
assign p_Result_4_fu_436_p5 = {{tmp_3_i_fu_429_p3}, {ap_const_lv32_0[32'd15 : 32'd0]}};
assign p_Result_61_i_fu_417_p5 = {{tmp_i_fu_410_p3}, {ap_const_lv32_0[32'd14 : 32'd0]}};
assign p_Val2_12_fu_513_p4 = {{ap_reg_phiprechg_p_Val2_13_in_reg_148pp0_it8[ap_const_lv32_1D : ap_const_lv32_7]}};
assign p_Val2_2_fu_322_p3 = {{hls_sin_cos_K0_V_q0}, {ap_const_lv1_0}};
assign p_Val2_s_fu_256_p1 = t_in;
assign p_i_op_op_fu_385_p2 = (ap_reg_ppstg_p_Result_11_reg_560_pp0_it5 + ap_const_lv8_F0);
assign phitmp_i_fu_527_p2 = (ap_reg_ppstg_tmp_38_i_reg_605_pp0_it7 - tmp_22_fu_523_p1);
assign ret_i_i_fu_543_p1 = p_Result_19_fu_533_p4;
assign ret_i_i_i_fu_509_p1 = p_Result_18_fu_502_p3;
assign shift_2_1_i_fu_483_p2 = (tmp_121_1_i_fu_460_p3 + ap_const_lv32_10);
assign sin_basis_fu_282_p0 = do_cos;
assign sin_basis_fu_282_p2 = (sin_basis_fu_282_p0 ^ ap_const_lv1_1);

always @ (p_Result_4_fu_436_p5) begin
    if (p_Result_4_fu_436_p5[31] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd0;
    end else if (p_Result_4_fu_436_p5[30] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd1;
    end else if (p_Result_4_fu_436_p5[29] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd2;
    end else if (p_Result_4_fu_436_p5[28] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd3;
    end else if (p_Result_4_fu_436_p5[27] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd4;
    end else if (p_Result_4_fu_436_p5[26] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd5;
    end else if (p_Result_4_fu_436_p5[25] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd6;
    end else if (p_Result_4_fu_436_p5[24] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd7;
    end else if (p_Result_4_fu_436_p5[23] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd8;
    end else if (p_Result_4_fu_436_p5[22] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd9;
    end else if (p_Result_4_fu_436_p5[21] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd10;
    end else if (p_Result_4_fu_436_p5[20] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd11;
    end else if (p_Result_4_fu_436_p5[19] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd12;
    end else if (p_Result_4_fu_436_p5[18] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd13;
    end else if (p_Result_4_fu_436_p5[17] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd14;
    end else if (p_Result_4_fu_436_p5[16] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd15;
    end else if (p_Result_4_fu_436_p5[15] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd16;
    end else if (p_Result_4_fu_436_p5[14] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd17;
    end else if (p_Result_4_fu_436_p5[13] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd18;
    end else if (p_Result_4_fu_436_p5[12] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd19;
    end else if (p_Result_4_fu_436_p5[11] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd20;
    end else if (p_Result_4_fu_436_p5[10] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd21;
    end else if (p_Result_4_fu_436_p5[9] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd22;
    end else if (p_Result_4_fu_436_p5[8] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd23;
    end else if (p_Result_4_fu_436_p5[7] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd24;
    end else if (p_Result_4_fu_436_p5[6] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd25;
    end else if (p_Result_4_fu_436_p5[5] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd26;
    end else if (p_Result_4_fu_436_p5[4] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd27;
    end else if (p_Result_4_fu_436_p5[3] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd28;
    end else if (p_Result_4_fu_436_p5[2] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd29;
    end else if (p_Result_4_fu_436_p5[1] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd30;
    end else if (p_Result_4_fu_436_p5[0] == 1'b1) begin
        tmp_121_1_i_fu_460_p3 = 32'd31;
    end else begin
        tmp_121_1_i_fu_460_p3 = 32'd32;
    end
end



always @ (p_Result_61_i_fu_417_p5) begin
    if (p_Result_61_i_fu_417_p5[31] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd0;
    end else if (p_Result_61_i_fu_417_p5[30] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd1;
    end else if (p_Result_61_i_fu_417_p5[29] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd2;
    end else if (p_Result_61_i_fu_417_p5[28] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd3;
    end else if (p_Result_61_i_fu_417_p5[27] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd4;
    end else if (p_Result_61_i_fu_417_p5[26] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd5;
    end else if (p_Result_61_i_fu_417_p5[25] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd6;
    end else if (p_Result_61_i_fu_417_p5[24] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd7;
    end else if (p_Result_61_i_fu_417_p5[23] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd8;
    end else if (p_Result_61_i_fu_417_p5[22] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd9;
    end else if (p_Result_61_i_fu_417_p5[21] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd10;
    end else if (p_Result_61_i_fu_417_p5[20] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd11;
    end else if (p_Result_61_i_fu_417_p5[19] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd12;
    end else if (p_Result_61_i_fu_417_p5[18] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd13;
    end else if (p_Result_61_i_fu_417_p5[17] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd14;
    end else if (p_Result_61_i_fu_417_p5[16] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd15;
    end else if (p_Result_61_i_fu_417_p5[15] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd16;
    end else if (p_Result_61_i_fu_417_p5[14] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd17;
    end else if (p_Result_61_i_fu_417_p5[13] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd18;
    end else if (p_Result_61_i_fu_417_p5[12] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd19;
    end else if (p_Result_61_i_fu_417_p5[11] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd20;
    end else if (p_Result_61_i_fu_417_p5[10] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd21;
    end else if (p_Result_61_i_fu_417_p5[9] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd22;
    end else if (p_Result_61_i_fu_417_p5[8] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd23;
    end else if (p_Result_61_i_fu_417_p5[7] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd24;
    end else if (p_Result_61_i_fu_417_p5[6] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd25;
    end else if (p_Result_61_i_fu_417_p5[5] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd26;
    end else if (p_Result_61_i_fu_417_p5[4] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd27;
    end else if (p_Result_61_i_fu_417_p5[3] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd28;
    end else if (p_Result_61_i_fu_417_p5[2] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd29;
    end else if (p_Result_61_i_fu_417_p5[1] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd30;
    end else if (p_Result_61_i_fu_417_p5[0] == 1'b1) begin
        tmp_121_i_fu_448_p3 = 32'd31;
    end else begin
        tmp_121_i_fu_448_p3 = 32'd32;
    end
end


assign tmp_128_1_i_fu_489_p2 = tmp_128_i_fu_472_p2 << tmp_21_fu_468_p1;
assign tmp_128_i_fu_472_p2 = ain_V_reg_586 << tmp_fu_456_p1;
assign tmp_129_i_fu_477_p2 = (tmp_121_i_fu_448_p3 == ap_const_lv32_10? 1'b1: 1'b0);
assign tmp_12_i_op_fu_390_p3 = ((closepath_fu_344_p2)? p_i_op_op_fu_385_p2: ap_const_lv8_6D);
assign tmp_21_fu_468_p1 = tmp_121_1_i_fu_460_p3[30:0];
assign tmp_22_fu_523_p1 = ap_reg_phiprechg_shift_1_i_reg_157pp0_it8[7:0];
assign tmp_37_i_fu_379_p2 = (ain_V_fu_349_p4 == ap_const_lv31_0? 1'b1: 1'b0);
assign tmp_38_i_fu_398_p3 = ((ap_reg_ppstg_do_cos_read_reg_548_pp0_it5)? ap_const_lv8_7F: tmp_12_i_op_fu_390_p3);
assign tmp_3_i_fu_429_p3 = {{p_Result_i_reg_596}, {ap_const_lv1_1}};
assign tmp_4_fu_301_p2 = (p_Result_11_fu_268_p4 == ap_const_lv8_0? 1'b1: 1'b0);
assign tmp_5_fu_307_p2 = (p_Result_2_fu_278_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign tmp_fu_456_p1 = tmp_121_i_fu_448_p3[30:0];
assign tmp_i1_fu_405_p2 = (ap_reg_ppstg_p_Result_11_reg_560_pp0_it5 == ap_const_lv8_FF? 1'b1: 1'b0);
assign tmp_i_fu_410_p3 = {{p_Result_64_i_reg_591}, {ap_const_lv1_1}};
assign tmp_s_fu_296_p1 = $unsigned(p_Result_16_fu_288_p3);
always @ (posedge ap_clk)
begin
    ap_reg_phiprechg_out_exp_V_reg_166pp0_it8[7:1] <= 7'b0000000;
    ap_reg_phiprechg_out_exp_V_reg_166pp0_it7[7:1] <= 7'b0000000;
    ap_reg_phiprechg_p_s_reg_238pp0_it7[31] <= 1'b0;
end



endmodule //sinf_or_cosf

