// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="vivado_activity_thread,hls_ip_2013_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.626000,HLS_SYN_LAT=86032004,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module vivado_activity_thread (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_arg_u_a_0_rfir,
        kernel_arg_u_a_0_current_price,
        kernel_arg_u_v_0_gamma,
        kernel_arg_u_v_0_gamma_ap_vld,
        kernel_arg_u_v_0_time,
        kernel_arg_u_v_0_time_ap_vld,
        kernel_arg_o_a_0_strike_price,
        kernel_arg_o_a_0_time_period,
        kernel_arg_o_a_0_call,
        kernel_arg_o_v_0_delta_time,
        kernel_arg_o_v_0_value,
        kernel_arg_o_v_0_value_ap_vld,
        result_0_address0,
        result_0_ce0,
        result_0_we0,
        result_0_d0,
        result_sqrd_0_address0,
        result_sqrd_0_ce0,
        result_sqrd_0_we0,
        result_sqrd_0_d0
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] kernel_arg_u_a_0_rfir;
input  [31:0] kernel_arg_u_a_0_current_price;
output  [31:0] kernel_arg_u_v_0_gamma;
output   kernel_arg_u_v_0_gamma_ap_vld;
output  [31:0] kernel_arg_u_v_0_time;
output   kernel_arg_u_v_0_time_ap_vld;
input  [31:0] kernel_arg_o_a_0_strike_price;
input  [31:0] kernel_arg_o_a_0_time_period;
input  [31:0] kernel_arg_o_a_0_call;
input  [31:0] kernel_arg_o_v_0_delta_time;
output  [31:0] kernel_arg_o_v_0_value;
output   kernel_arg_o_v_0_value_ap_vld;
output  [9:0] result_0_address0;
output   result_0_ce0;
output   result_0_we0;
output  [31:0] result_0_d0;
output  [9:0] result_sqrd_0_address0;
output   result_sqrd_0_ce0;
output   result_sqrd_0_we0;
output  [31:0] result_sqrd_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] kernel_arg_u_v_0_gamma;
reg kernel_arg_u_v_0_gamma_ap_vld;
reg[31:0] kernel_arg_u_v_0_time;
reg kernel_arg_u_v_0_time_ap_vld;
reg[31:0] kernel_arg_o_v_0_value;
reg kernel_arg_o_v_0_value_ap_vld;
reg result_0_ce0;
reg result_0_we0;
reg result_sqrd_0_ce0;
reg result_sqrd_0_we0;
reg   [5:0] ap_CS_fsm = 6'b000000;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] reg_239;
reg   [31:0] delta_time_0_reg_293;
wire   [9:0] p_1_fu_251_p2;
reg   [9:0] p_1_reg_307;
wire   [12:0] pp_1_fu_263_p2;
reg   [12:0] pp_1_reg_315;
wire   [0:0] exitcond_fu_257_p2;
wire   [31:0] grp_fu_210_p2;
reg   [31:0] tmp_1_i_reg_330;
reg   [31:0] tmp_i_3_reg_335;
wire   [31:0] grp_fu_234_p2;
wire   [0:0] tmp_1_fu_269_p2;
reg   [0:0] tmp_1_reg_347;
wire   [31:0] storemerge_i_fu_275_p3;
reg   [31:0] storemerge_i_reg_358;
reg   [9:0] p_reg_150;
reg   [31:0] tmp_pn_reg_162;
wire   [0:0] exitcond1_fu_245_p2;
reg   [31:0] kernel_arg_u_v_0_time_load_reg_174;
reg   [31:0] kernel_arg_u_v_0_gamma_load_2_reg_186;
reg   [12:0] pp_reg_198;
wire   [63:0] tmp_2_fu_282_p1;
reg   [31:0] grp_fu_210_p0;
reg   [31:0] grp_fu_210_p1;
reg   [31:0] grp_fu_219_p0;
reg   [31:0] grp_fu_219_p1;
wire   [31:0] grp_fu_228_p0;
wire   [31:0] grp_fu_228_p1;
wire   [31:0] grp_fu_234_p1;
wire   [0:0] grp_fu_228_p2;
reg   [1:0] grp_fu_210_opcode;
wire    grp_fu_210_ce;
wire    grp_fu_219_ce;
wire    grp_fu_228_ce;
wire   [4:0] grp_fu_228_opcode;
wire   [31:0] grp_fu_234_p0;
wire    grp_fu_234_ce;
reg   [5:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b000000;
parameter    ap_ST_st2_fsm_1 = 6'b1;
parameter    ap_ST_st3_fsm_2 = 6'b10;
parameter    ap_ST_st4_fsm_3 = 6'b11;
parameter    ap_ST_st5_fsm_4 = 6'b100;
parameter    ap_ST_st6_fsm_5 = 6'b101;
parameter    ap_ST_st7_fsm_6 = 6'b110;
parameter    ap_ST_st8_fsm_7 = 6'b111;
parameter    ap_ST_st9_fsm_8 = 6'b1000;
parameter    ap_ST_st10_fsm_9 = 6'b1001;
parameter    ap_ST_st11_fsm_10 = 6'b1010;
parameter    ap_ST_st12_fsm_11 = 6'b1011;
parameter    ap_ST_st13_fsm_12 = 6'b1100;
parameter    ap_ST_st14_fsm_13 = 6'b1101;
parameter    ap_ST_st15_fsm_14 = 6'b1110;
parameter    ap_ST_st16_fsm_15 = 6'b1111;
parameter    ap_ST_st17_fsm_16 = 6'b10000;
parameter    ap_ST_st18_fsm_17 = 6'b10001;
parameter    ap_ST_st19_fsm_18 = 6'b10010;
parameter    ap_ST_st20_fsm_19 = 6'b10011;
parameter    ap_ST_st21_fsm_20 = 6'b10100;
parameter    ap_ST_st22_fsm_21 = 6'b10101;
parameter    ap_ST_st23_fsm_22 = 6'b10110;
parameter    ap_ST_st24_fsm_23 = 6'b10111;
parameter    ap_ST_st25_fsm_24 = 6'b11000;
parameter    ap_ST_st26_fsm_25 = 6'b11001;
parameter    ap_ST_st27_fsm_26 = 6'b11010;
parameter    ap_ST_st28_fsm_27 = 6'b11011;
parameter    ap_ST_st29_fsm_28 = 6'b11100;
parameter    ap_ST_st30_fsm_29 = 6'b11101;
parameter    ap_ST_st31_fsm_30 = 6'b11110;
parameter    ap_ST_st32_fsm_31 = 6'b11111;
parameter    ap_ST_st33_fsm_32 = 6'b100000;
parameter    ap_ST_st34_fsm_33 = 6'b100001;
parameter    ap_ST_st35_fsm_34 = 6'b100010;
parameter    ap_ST_st36_fsm_35 = 6'b100011;
parameter    ap_ST_st37_fsm_36 = 6'b100100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_39800000 = 32'b111001100000000000000000000000;
parameter    ap_const_lv10_3E8 = 10'b1111101000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv13_1000 = 13'b1000000000000;
parameter    ap_const_lv13_1 = 13'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_true = 1'b1;


vivado_activity_thread_faddfsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vivado_activity_thread_faddfsub_32ns_32ns_32_5_full_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_210_p0 ),
    .din1( grp_fu_210_p1 ),
    .opcode( grp_fu_210_opcode ),
    .ce( grp_fu_210_ce ),
    .dout( grp_fu_210_p2 )
);

vivado_activity_thread_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 2 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vivado_activity_thread_fmul_32ns_32ns_32_4_max_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_219_p0 ),
    .din1( grp_fu_219_p1 ),
    .ce( grp_fu_219_ce ),
    .dout( grp_fu_219_p2 )
);

vivado_activity_thread_fcmp_32ns_32ns_1_3 #(
    .ID( 3 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
vivado_activity_thread_fcmp_32ns_32ns_1_3_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_228_p0 ),
    .din1( grp_fu_228_p1 ),
    .ce( grp_fu_228_ce ),
    .opcode( grp_fu_228_opcode ),
    .dout( grp_fu_228_p2 )
);

vivado_activity_thread_fexp_32ns_32ns_32_9_full_dsp #(
    .ID( 4 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vivado_activity_thread_fexp_32ns_32ns_32_9_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_234_p0 ),
    .din1( grp_fu_234_p1 ),
    .ce( grp_fu_234_ce ),
    .dout( grp_fu_234_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        kernel_arg_u_v_0_gamma_load_2_reg_186 <= tmp_i_3_reg_335;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        kernel_arg_u_v_0_gamma_load_2_reg_186 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        kernel_arg_u_v_0_time_load_reg_174 <= tmp_1_i_reg_330;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        kernel_arg_u_v_0_time_load_reg_174 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        p_reg_150 <= p_1_reg_307;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        p_reg_150 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        pp_reg_198 <= pp_1_reg_315;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        pp_reg_198 <= ap_const_lv13_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st26_fsm_25 == ap_CS_fsm)) begin
        tmp_pn_reg_162 <= grp_fu_234_p2;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        tmp_pn_reg_162 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        delta_time_0_reg_293 <= grp_fu_219_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        p_1_reg_307 <= p_1_fu_251_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_1_reg_315 <= pp_1_fu_263_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st9_fsm_8 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm))) begin
        reg_239 <= grp_fu_219_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st33_fsm_32 == ap_CS_fsm)) begin
        storemerge_i_reg_358 <= storemerge_i_fu_275_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        tmp_1_i_reg_330 <= grp_fu_210_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st28_fsm_27 == ap_CS_fsm)) begin
        tmp_1_reg_347 <= tmp_1_fu_269_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        tmp_i_3_reg_335 <= grp_fu_210_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_245_p2)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_245_p2)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// grp_fu_210_opcode assign process. ///
always @ (ap_CS_fsm or exitcond_fu_257_p2 or tmp_1_reg_347)
begin
    if ((((ap_ST_st29_fsm_28 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_1_reg_347)) | ((ap_ST_st29_fsm_28 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_reg_347)))) begin
        grp_fu_210_opcode = ap_const_lv2_1;
    end else if ((((ap_ST_st9_fsm_8 == ap_CS_fsm) & (exitcond_fu_257_p2 == ap_const_lv1_0)) | (ap_ST_st13_fsm_12 == ap_CS_fsm))) begin
        grp_fu_210_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_210_opcode = 'bx;
    end
end

/// grp_fu_210_p0 assign process. ///
always @ (ap_CS_fsm or kernel_arg_o_a_0_strike_price or reg_239 or tmp_1_reg_347 or kernel_arg_u_v_0_time_load_reg_174 or kernel_arg_u_v_0_gamma_load_2_reg_186)
begin
    if (((ap_ST_st29_fsm_28 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_reg_347))) begin
        grp_fu_210_p0 = kernel_arg_o_a_0_strike_price;
    end else if (((ap_ST_st29_fsm_28 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_1_reg_347))) begin
        grp_fu_210_p0 = reg_239;
    end else if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        grp_fu_210_p0 = kernel_arg_u_v_0_gamma_load_2_reg_186;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        grp_fu_210_p0 = kernel_arg_u_v_0_time_load_reg_174;
    end else begin
        grp_fu_210_p0 = 'bx;
    end
end

/// grp_fu_210_p1 assign process. ///
always @ (ap_CS_fsm or kernel_arg_o_a_0_strike_price or reg_239 or delta_time_0_reg_293 or tmp_1_reg_347)
begin
    if (((ap_ST_st29_fsm_28 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_1_reg_347))) begin
        grp_fu_210_p1 = kernel_arg_o_a_0_strike_price;
    end else if (((ap_ST_st13_fsm_12 == ap_CS_fsm) | ((ap_ST_st29_fsm_28 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_reg_347)))) begin
        grp_fu_210_p1 = reg_239;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        grp_fu_210_p1 = delta_time_0_reg_293;
    end else begin
        grp_fu_210_p1 = 'bx;
    end
end

/// grp_fu_219_p0 assign process. ///
always @ (ap_CS_fsm or kernel_arg_u_a_0_rfir or kernel_arg_u_a_0_current_price or kernel_arg_o_a_0_time_period or storemerge_i_reg_358)
begin
    if ((ap_ST_st34_fsm_33 == ap_CS_fsm)) begin
        grp_fu_219_p0 = storemerge_i_reg_358;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        grp_fu_219_p0 = kernel_arg_u_a_0_rfir;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        grp_fu_219_p0 = kernel_arg_u_a_0_current_price;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        grp_fu_219_p0 = kernel_arg_o_a_0_time_period;
    end else begin
        grp_fu_219_p0 = 'bx;
    end
end

/// grp_fu_219_p1 assign process. ///
always @ (ap_CS_fsm or delta_time_0_reg_293 or storemerge_i_reg_358 or tmp_pn_reg_162)
begin
    if ((ap_ST_st34_fsm_33 == ap_CS_fsm)) begin
        grp_fu_219_p1 = storemerge_i_reg_358;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        grp_fu_219_p1 = delta_time_0_reg_293;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        grp_fu_219_p1 = tmp_pn_reg_162;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        grp_fu_219_p1 = ap_const_lv32_39800000;
    end else begin
        grp_fu_219_p1 = 'bx;
    end
end

/// kernel_arg_o_v_0_value assign process. ///
always @ (ap_CS_fsm or storemerge_i_reg_358 or exitcond1_fu_245_p2)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        kernel_arg_o_v_0_value = storemerge_i_reg_358;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        kernel_arg_o_v_0_value = ap_const_lv32_0;
    end else begin
        kernel_arg_o_v_0_value = 'bx;
    end
end

/// kernel_arg_o_v_0_value_ap_vld assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_245_p2)
begin
    if (((ap_ST_st37_fsm_36 == ap_CS_fsm) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2)))) begin
        kernel_arg_o_v_0_value_ap_vld = ap_const_logic_1;
    end else begin
        kernel_arg_o_v_0_value_ap_vld = ap_const_logic_0;
    end
end

/// kernel_arg_u_v_0_gamma assign process. ///
always @ (ap_CS_fsm or tmp_i_3_reg_335 or exitcond1_fu_245_p2)
begin
    if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        kernel_arg_u_v_0_gamma = tmp_i_3_reg_335;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        kernel_arg_u_v_0_gamma = ap_const_lv32_0;
    end else begin
        kernel_arg_u_v_0_gamma = 'bx;
    end
end

/// kernel_arg_u_v_0_gamma_ap_vld assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_245_p2)
begin
    if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2)) | (ap_ST_st18_fsm_17 == ap_CS_fsm))) begin
        kernel_arg_u_v_0_gamma_ap_vld = ap_const_logic_1;
    end else begin
        kernel_arg_u_v_0_gamma_ap_vld = ap_const_logic_0;
    end
end

/// kernel_arg_u_v_0_time assign process. ///
always @ (ap_CS_fsm or grp_fu_210_p2 or exitcond1_fu_245_p2)
begin
    if ((ap_ST_st13_fsm_12 == ap_CS_fsm)) begin
        kernel_arg_u_v_0_time = grp_fu_210_p2;
    end else if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2))) begin
        kernel_arg_u_v_0_time = ap_const_lv32_0;
    end else begin
        kernel_arg_u_v_0_time = 'bx;
    end
end

/// kernel_arg_u_v_0_time_ap_vld assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_245_p2)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) | ((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_245_p2)))) begin
        kernel_arg_u_v_0_time_ap_vld = ap_const_logic_1;
    end else begin
        kernel_arg_u_v_0_time_ap_vld = ap_const_logic_0;
    end
end

/// result_0_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        result_0_ce0 = ap_const_logic_1;
    end else begin
        result_0_ce0 = ap_const_logic_0;
    end
end

/// result_0_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        result_0_we0 = ap_const_logic_1;
    end else begin
        result_0_we0 = ap_const_logic_0;
    end
end

/// result_sqrd_0_ce0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        result_sqrd_0_ce0 = ap_const_logic_1;
    end else begin
        result_sqrd_0_ce0 = ap_const_logic_0;
    end
end

/// result_sqrd_0_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st37_fsm_36 == ap_CS_fsm)) begin
        result_sqrd_0_we0 = ap_const_logic_1;
    end else begin
        result_sqrd_0_we0 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or exitcond_fu_257_p2 or exitcond1_fu_245_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            if (~(ap_const_lv1_0 == exitcond1_fu_245_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            if (~(exitcond_fu_257_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
        ap_ST_st22_fsm_21 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
        ap_ST_st23_fsm_22 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
        ap_ST_st24_fsm_23 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
        ap_ST_st25_fsm_24 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
        ap_ST_st26_fsm_25 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st27_fsm_26 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
        ap_ST_st28_fsm_27 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
        ap_ST_st29_fsm_28 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
        ap_ST_st30_fsm_29 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
        ap_ST_st31_fsm_30 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
        ap_ST_st32_fsm_31 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
        ap_ST_st33_fsm_32 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
        ap_ST_st34_fsm_33 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
        ap_ST_st35_fsm_34 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
        ap_ST_st36_fsm_35 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
        ap_ST_st37_fsm_36 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign exitcond1_fu_245_p2 = (p_reg_150 == ap_const_lv10_3E8? 1'b1: 1'b0);
assign exitcond_fu_257_p2 = (pp_reg_198 == ap_const_lv13_1000? 1'b1: 1'b0);
assign grp_fu_210_ce = ap_const_logic_1;
assign grp_fu_219_ce = ap_const_logic_1;
assign grp_fu_228_ce = ap_const_logic_1;
assign grp_fu_228_opcode = ap_const_lv5_1;
assign grp_fu_228_p0 = kernel_arg_o_a_0_call;
assign grp_fu_228_p1 = ap_const_lv32_0;
assign grp_fu_234_ce = ap_const_logic_1;
assign grp_fu_234_p0 = ap_const_lv32_1;
assign grp_fu_234_p1 = tmp_i_3_reg_335;
assign p_1_fu_251_p2 = (p_reg_150 + ap_const_lv10_1);
assign pp_1_fu_263_p2 = (pp_reg_198 + ap_const_lv13_1);
assign result_0_address0 = tmp_2_fu_282_p1;
assign result_0_d0 = storemerge_i_reg_358;
assign result_sqrd_0_address0 = tmp_2_fu_282_p1;
assign result_sqrd_0_d0 = grp_fu_219_p2;
assign storemerge_i_fu_275_p3 = ((tmp_1_reg_347)? grp_fu_210_p2: grp_fu_210_p2);
assign tmp_1_fu_269_p2 = (grp_fu_228_p2 ^ ap_const_lv1_1);
assign tmp_2_fu_282_p1 = $unsigned(p_reg_150);


endmodule //vivado_activity_thread

