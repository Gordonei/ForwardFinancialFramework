// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _vivado_activity_thread_HH_
#define _vivado_activity_thread_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp.h"
#include "vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp.h"
#include "vivado_activity_thread_fptrunc_64ns_32_3.h"
#include "vivado_activity_thread_fpext_32ns_64_3.h"
#include "vivado_activity_thread_fcmp_32ns_32ns_1_3.h"
#include "vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp.h"
#include "vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp.h"

namespace ap_rtl {

struct vivado_activity_thread : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > kernel_u_a_0_rfir;
    sc_in< sc_lv<32> > kernel_u_a_0_current_price;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_initial_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_rho;
    sc_in< sc_lv<32> > kernel_u_a_0_kappa;
    sc_in< sc_lv<32> > kernel_u_a_0_theta;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_1;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_1;
    sc_in< sc_lv<32> > kernel_o_a_0_second_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_out;
    sc_in< sc_lv<32> > kernel_o_a_0_down;
    sc_in< sc_lv<32> > kernel_o_a_0_strike_price;
    sc_in< sc_lv<32> > kernel_o_a_0_time_period;
    sc_in< sc_lv<32> > kernel_o_a_0_call;
    sc_in< sc_lv<32> > kernel_o_a_0_points;
    sc_in< sc_lv<32> > seed_0_s1;
    sc_in< sc_lv<32> > seed_0_s2;
    sc_in< sc_lv<32> > seed_0_s3;
    sc_in< sc_lv<32> > seed_0_offset;
    sc_out< sc_lv<32> > thread_result_0;
    sc_out< sc_logic > thread_result_0_ap_vld;
    sc_out< sc_lv<32> > thread_result_sqrd_0;
    sc_out< sc_logic > thread_result_sqrd_0_ap_vld;


    // Module declarations
    vivado_activity_thread(sc_module_name name);
    SC_HAS_PROCESS(vivado_activity_thread);

    ~vivado_activity_thread();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp<1,4,32,32,32>* vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp_U1;
    vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp<2,3,32,32,32>* vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp_U2;
    vivado_activity_thread_fptrunc_64ns_32_3<3,3,64,32>* vivado_activity_thread_fptrunc_64ns_32_3_U3;
    vivado_activity_thread_fpext_32ns_64_3<4,3,32,64>* vivado_activity_thread_fpext_32ns_64_3_U4;
    vivado_activity_thread_fcmp_32ns_32ns_1_3<5,3,32,32,1>* vivado_activity_thread_fcmp_32ns_32ns_1_3_U5;
    vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp<6,5,64,64,64>* vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp_U6;
    vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp<7,15,64,64,64>* vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp_U7;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<32> > grp_fu_234_p2;
    sc_signal< sc_lv<32> > reg_264;
    sc_signal< sc_lv<32> > grp_fu_227_p2;
    sc_signal< sc_lv<32> > reg_270;
    sc_signal< sc_lv<1> > tmp_5_reg_343;
    sc_signal< sc_lv<64> > grp_fu_244_p1;
    sc_signal< sc_lv<64> > tmp_reg_338;
    sc_signal< sc_lv<1> > tmp_5_fu_275_p2;
    sc_signal< sc_lv<7> > p_1_fu_287_p2;
    sc_signal< sc_lv<7> > p_1_reg_351;
    sc_signal< sc_lv<64> > grp_fu_254_p2;
    sc_signal< sc_lv<64> > spot_price_0_0_in_reg_356;
    sc_signal< sc_lv<32> > grp_fu_241_p1;
    sc_signal< sc_lv<32> > spot_price_0_reg_361;
    sc_signal< sc_lv<13> > pp_1_fu_299_p2;
    sc_signal< sc_lv<13> > pp_1_reg_370;
    sc_signal< sc_lv<32> > u_v_0_gamma_reg_375;
    sc_signal< sc_lv<64> > tmp_1_reg_381;
    sc_signal< sc_lv<64> > grp_fu_259_p2;
    sc_signal< sc_lv<32> > o_v_0_value_fu_305_p3;
    sc_signal< sc_lv<32> > o_v_0_value_reg_391;
    sc_signal< sc_lv<32> > tmp_9_reg_398;
    sc_signal< sc_lv<7> > p_reg_154;
    sc_signal< sc_lv<32> > result_0_reg_165;
    sc_signal< sc_lv<32> > result_sqrd_0_reg_178;
    sc_signal< sc_lv<64> > tmp_6_pn_reg_191;
    sc_signal< sc_lv<1> > exitcond1_fu_281_p2;
    sc_signal< sc_lv<32> > u_v_gamma_read_assign_reg_203;
    sc_signal< sc_lv<13> > pp_reg_215;
    sc_signal< sc_lv<32> > grp_fu_227_p0;
    sc_signal< sc_lv<32> > grp_fu_227_p1;
    sc_signal< sc_lv<32> > grp_fu_234_p0;
    sc_signal< sc_lv<32> > grp_fu_234_p1;
    sc_signal< sc_lv<64> > grp_fu_241_p0;
    sc_signal< sc_lv<32> > grp_fu_244_p0;
    sc_signal< sc_lv<32> > grp_fu_248_p0;
    sc_signal< sc_lv<32> > grp_fu_248_p1;
    sc_signal< sc_lv<64> > grp_fu_254_p0;
    sc_signal< sc_lv<64> > grp_fu_254_p1;
    sc_signal< sc_lv<64> > grp_fu_259_p1;
    sc_signal< sc_lv<1> > grp_fu_248_p2;
    sc_signal< sc_lv<2> > grp_fu_227_opcode;
    sc_signal< sc_lv<1> > exitcond_fu_293_p2;
    sc_signal< sc_logic > grp_fu_227_ce;
    sc_signal< sc_logic > grp_fu_234_ce;
    sc_signal< sc_logic > grp_fu_241_ce;
    sc_signal< sc_logic > grp_fu_244_ce;
    sc_signal< sc_logic > grp_fu_248_ce;
    sc_signal< sc_lv<5> > grp_fu_248_opcode;
    sc_signal< sc_logic > grp_fu_254_ce;
    sc_signal< sc_lv<64> > grp_fu_259_p0;
    sc_signal< sc_logic > grp_fu_259_ce;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<6> ap_ST_st7_fsm_6;
    static const sc_lv<6> ap_ST_st8_fsm_7;
    static const sc_lv<6> ap_ST_st9_fsm_8;
    static const sc_lv<6> ap_ST_st10_fsm_9;
    static const sc_lv<6> ap_ST_st11_fsm_10;
    static const sc_lv<6> ap_ST_st12_fsm_11;
    static const sc_lv<6> ap_ST_st13_fsm_12;
    static const sc_lv<6> ap_ST_st14_fsm_13;
    static const sc_lv<6> ap_ST_st15_fsm_14;
    static const sc_lv<6> ap_ST_st16_fsm_15;
    static const sc_lv<6> ap_ST_st17_fsm_16;
    static const sc_lv<6> ap_ST_st18_fsm_17;
    static const sc_lv<6> ap_ST_st19_fsm_18;
    static const sc_lv<6> ap_ST_st20_fsm_19;
    static const sc_lv<6> ap_ST_st21_fsm_20;
    static const sc_lv<6> ap_ST_st22_fsm_21;
    static const sc_lv<6> ap_ST_st23_fsm_22;
    static const sc_lv<6> ap_ST_st24_fsm_23;
    static const sc_lv<6> ap_ST_st25_fsm_24;
    static const sc_lv<6> ap_ST_st26_fsm_25;
    static const sc_lv<6> ap_ST_st27_fsm_26;
    static const sc_lv<6> ap_ST_st28_fsm_27;
    static const sc_lv<6> ap_ST_st29_fsm_28;
    static const sc_lv<6> ap_ST_st30_fsm_29;
    static const sc_lv<6> ap_ST_st31_fsm_30;
    static const sc_lv<6> ap_ST_st32_fsm_31;
    static const sc_lv<6> ap_ST_st33_fsm_32;
    static const sc_lv<6> ap_ST_st34_fsm_33;
    static const sc_lv<6> ap_ST_st35_fsm_34;
    static const sc_lv<6> ap_ST_st36_fsm_35;
    static const sc_lv<6> ap_ST_st37_fsm_36;
    static const sc_lv<6> ap_ST_st38_fsm_37;
    static const sc_lv<6> ap_ST_st39_fsm_38;
    static const sc_lv<6> ap_ST_st40_fsm_39;
    static const sc_lv<6> ap_ST_st41_fsm_40;
    static const sc_lv<6> ap_ST_st42_fsm_41;
    static const sc_lv<6> ap_ST_st43_fsm_42;
    static const sc_lv<6> ap_ST_st44_fsm_43;
    static const sc_lv<6> ap_ST_st45_fsm_44;
    static const sc_lv<6> ap_ST_st46_fsm_45;
    static const sc_lv<6> ap_ST_st47_fsm_46;
    static const sc_lv<6> ap_ST_st48_fsm_47;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_39800000;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<13> ap_const_lv13_1000;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<64> ap_const_lv64_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_281_p2();
    void thread_exitcond_fu_293_p2();
    void thread_grp_fu_227_ce();
    void thread_grp_fu_227_opcode();
    void thread_grp_fu_227_p0();
    void thread_grp_fu_227_p1();
    void thread_grp_fu_234_ce();
    void thread_grp_fu_234_p0();
    void thread_grp_fu_234_p1();
    void thread_grp_fu_241_ce();
    void thread_grp_fu_241_p0();
    void thread_grp_fu_244_ce();
    void thread_grp_fu_244_p0();
    void thread_grp_fu_248_ce();
    void thread_grp_fu_248_opcode();
    void thread_grp_fu_248_p0();
    void thread_grp_fu_248_p1();
    void thread_grp_fu_254_ce();
    void thread_grp_fu_254_p0();
    void thread_grp_fu_254_p1();
    void thread_grp_fu_259_ce();
    void thread_grp_fu_259_p0();
    void thread_grp_fu_259_p1();
    void thread_o_v_0_value_fu_305_p3();
    void thread_p_1_fu_287_p2();
    void thread_pp_1_fu_299_p2();
    void thread_thread_result_0();
    void thread_thread_result_0_ap_vld();
    void thread_thread_result_sqrd_0();
    void thread_thread_result_sqrd_0_ap_vld();
    void thread_tmp_5_fu_275_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
