// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _vivado_activity_thread_HH_
#define _vivado_activity_thread_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp.h"
#include "vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp.h"
#include "vivado_activity_thread_fdiv_32ns_32ns_32_12.h"
#include "vivado_activity_thread_fptrunc_64ns_32_3.h"
#include "vivado_activity_thread_fpext_32ns_64_3.h"
#include "vivado_activity_thread_fcmp_32ns_32ns_1_3.h"
#include "vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp.h"
#include "vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp.h"
#include "vivado_activity_thread_thread_result_buff.h"

namespace ap_rtl {

struct vivado_activity_thread : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > a_req_din;
    sc_in< sc_logic > a_req_full_n;
    sc_out< sc_logic > a_req_write;
    sc_in< sc_logic > a_rsp_empty_n;
    sc_out< sc_logic > a_rsp_read;
    sc_out< sc_lv<32> > a_address;
    sc_in< sc_lv<32> > a_datain;
    sc_out< sc_lv<32> > a_dataout;
    sc_out< sc_lv<32> > a_size;
    sc_in< sc_lv<32> > kernel_u_a_0_rfir;
    sc_in< sc_lv<32> > kernel_u_a_0_current_price;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_initial_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_volatility_volatility;
    sc_in< sc_lv<32> > kernel_u_a_0_rho;
    sc_in< sc_lv<32> > kernel_u_a_0_kappa;
    sc_in< sc_lv<32> > kernel_u_a_0_theta;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_0_1;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_0;
    sc_in< sc_lv<32> > kernel_u_a_0_correlation_matrix_1_1;
    sc_in< sc_lv<32> > kernel_o_a_0_second_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_barrier;
    sc_in< sc_lv<32> > kernel_o_a_0_out;
    sc_in< sc_lv<32> > kernel_o_a_0_down;
    sc_in< sc_lv<32> > kernel_o_a_0_strike_price;
    sc_in< sc_lv<32> > kernel_o_a_0_time_period;
    sc_in< sc_lv<32> > kernel_o_a_0_call;
    sc_in< sc_lv<32> > kernel_o_a_0_points;
    sc_in< sc_lv<32> > seed_0_s1;
    sc_in< sc_lv<32> > seed_0_s2;
    sc_in< sc_lv<32> > seed_0_s3;
    sc_in< sc_lv<32> > seed_0_offset;
    sc_in< sc_lv<32> > thread_result_0;


    // Module declarations
    vivado_activity_thread(sc_module_name name);
    SC_HAS_PROCESS(vivado_activity_thread);

    ~vivado_activity_thread();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    vivado_activity_thread_thread_result_buff* thread_result_buff_U;
    vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp<1,4,32,32,32>* vivado_activity_thread_faddfsub_32ns_32ns_32_4_full_dsp_U1;
    vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp<2,3,32,32,32>* vivado_activity_thread_fmul_32ns_32ns_32_3_max_dsp_U2;
    vivado_activity_thread_fdiv_32ns_32ns_32_12<3,12,32,32,32>* vivado_activity_thread_fdiv_32ns_32ns_32_12_U3;
    vivado_activity_thread_fptrunc_64ns_32_3<4,3,64,32>* vivado_activity_thread_fptrunc_64ns_32_3_U4;
    vivado_activity_thread_fpext_32ns_64_3<5,3,32,64>* vivado_activity_thread_fpext_32ns_64_3_U5;
    vivado_activity_thread_fcmp_32ns_32ns_1_3<6,3,32,32,1>* vivado_activity_thread_fcmp_32ns_32ns_1_3_U6;
    vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp<7,5,64,64,64>* vivado_activity_thread_dmul_64ns_64ns_64_5_max_dsp_U7;
    vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp<8,15,64,64,64>* vivado_activity_thread_dexp_64ns_64ns_64_15_full_dsp_U8;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_lv<10> > indvar_reg_253;
    sc_signal< sc_lv<32> > grp_fu_265_p2;
    sc_signal< sc_lv<32> > reg_304;
    sc_signal< sc_lv<1> > tmp_7_reg_439;
    sc_signal< sc_lv<32> > grp_fu_275_p2;
    sc_signal< sc_lv<32> > delta_time_0_reg_398;
    sc_signal< sc_lv<64> > grp_fu_284_p1;
    sc_signal< sc_lv<64> > tmp_8_reg_429;
    sc_signal< sc_lv<32> > grp_fu_270_p2;
    sc_signal< sc_lv<32> > tmp_i_reg_434;
    sc_signal< sc_lv<1> > tmp_7_fu_308_p2;
    sc_signal< sc_lv<10> > p_1_fu_320_p2;
    sc_signal< sc_lv<10> > p_1_reg_447;
    sc_signal< sc_lv<32> > a_addr_reg_452;
    sc_signal< sc_lv<1> > exitcond1_fu_314_p2;
    sc_signal< sc_lv<64> > grp_fu_294_p2;
    sc_signal< sc_lv<64> > spot_price_0_0_in_reg_457;
    sc_signal< sc_lv<32> > grp_fu_281_p1;
    sc_signal< sc_lv<32> > spot_price_0_reg_462;
    sc_signal< sc_lv<4> > pp_1_fu_351_p2;
    sc_signal< sc_lv<4> > pp_1_reg_471;
    sc_signal< sc_lv<32> > u_v_0_gamma_reg_476;
    sc_signal< sc_lv<64> > tmp_4_reg_482;
    sc_signal< sc_lv<64> > grp_fu_299_p2;
    sc_signal< sc_lv<1> > exitcond2_fu_370_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_492;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond2_reg_492_pp0_it1;
    sc_signal< bool > ap_sig_bdd_179;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<10> > indvar_next_fu_376_p2;
    sc_signal< sc_lv<1> > isIter0_fu_387_p2;
    sc_signal< sc_lv<1> > isIter0_reg_506;
    sc_signal< sc_lv<1> > ap_reg_ppstg_isIter0_reg_506_pp0_it1;
    sc_signal< sc_lv<32> > thread_result_buff_q0;
    sc_signal< sc_lv<32> > thread_result_buff_load_reg_510;
    sc_signal< sc_lv<10> > thread_result_buff_address0;
    sc_signal< sc_logic > thread_result_buff_ce0;
    sc_signal< sc_logic > thread_result_buff_we0;
    sc_signal< sc_lv<32> > thread_result_buff_d0;
    sc_signal< sc_lv<10> > p_reg_206;
    sc_signal< sc_lv<64> > tmp_pn_reg_218;
    sc_signal< sc_lv<32> > u_v_gamma_read_assign_reg_230;
    sc_signal< sc_lv<4> > pp_reg_242;
    sc_signal< sc_lv<64> > tmp_2_fu_365_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_382_p1;
    sc_signal< sc_lv<64> > tmp_5_fu_335_p1;
    sc_signal< sc_lv<32> > grp_fu_265_p0;
    sc_signal< sc_lv<32> > grp_fu_265_p1;
    sc_signal< sc_lv<32> > grp_fu_270_p0;
    sc_signal< sc_lv<32> > grp_fu_270_p1;
    sc_signal< sc_lv<32> > grp_fu_275_p0;
    sc_signal< sc_lv<32> > grp_fu_275_p1;
    sc_signal< sc_lv<64> > grp_fu_281_p0;
    sc_signal< sc_lv<32> > grp_fu_284_p0;
    sc_signal< sc_lv<32> > grp_fu_288_p0;
    sc_signal< sc_lv<32> > grp_fu_288_p1;
    sc_signal< sc_lv<64> > grp_fu_294_p0;
    sc_signal< sc_lv<64> > grp_fu_294_p1;
    sc_signal< sc_lv<64> > grp_fu_299_p1;
    sc_signal< sc_lv<1> > grp_fu_288_p2;
    sc_signal< sc_lv<30> > tmp_fu_326_p4;
    sc_signal< sc_lv<2> > grp_fu_265_opcode;
    sc_signal< sc_lv<1> > exitcond_fu_345_p2;
    sc_signal< sc_logic > grp_fu_265_ce;
    sc_signal< sc_logic > grp_fu_270_ce;
    sc_signal< sc_logic > grp_fu_275_ce;
    sc_signal< sc_logic > grp_fu_281_ce;
    sc_signal< sc_logic > grp_fu_284_ce;
    sc_signal< sc_logic > grp_fu_288_ce;
    sc_signal< sc_lv<5> > grp_fu_288_opcode;
    sc_signal< sc_logic > grp_fu_294_ce;
    sc_signal< sc_lv<64> > grp_fu_299_p0;
    sc_signal< sc_logic > grp_fu_299_ce;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<6> ap_ST_st7_fsm_6;
    static const sc_lv<6> ap_ST_st8_fsm_7;
    static const sc_lv<6> ap_ST_st9_fsm_8;
    static const sc_lv<6> ap_ST_st10_fsm_9;
    static const sc_lv<6> ap_ST_st11_fsm_10;
    static const sc_lv<6> ap_ST_st12_fsm_11;
    static const sc_lv<6> ap_ST_st13_fsm_12;
    static const sc_lv<6> ap_ST_st14_fsm_13;
    static const sc_lv<6> ap_ST_st15_fsm_14;
    static const sc_lv<6> ap_ST_st16_fsm_15;
    static const sc_lv<6> ap_ST_st17_fsm_16;
    static const sc_lv<6> ap_ST_st18_fsm_17;
    static const sc_lv<6> ap_ST_st19_fsm_18;
    static const sc_lv<6> ap_ST_st20_fsm_19;
    static const sc_lv<6> ap_ST_st21_fsm_20;
    static const sc_lv<6> ap_ST_st22_fsm_21;
    static const sc_lv<6> ap_ST_st23_fsm_22;
    static const sc_lv<6> ap_ST_st24_fsm_23;
    static const sc_lv<6> ap_ST_st25_fsm_24;
    static const sc_lv<6> ap_ST_st26_fsm_25;
    static const sc_lv<6> ap_ST_st27_fsm_26;
    static const sc_lv<6> ap_ST_st28_fsm_27;
    static const sc_lv<6> ap_ST_st29_fsm_28;
    static const sc_lv<6> ap_ST_st30_fsm_29;
    static const sc_lv<6> ap_ST_st31_fsm_30;
    static const sc_lv<6> ap_ST_st32_fsm_31;
    static const sc_lv<6> ap_ST_st33_fsm_32;
    static const sc_lv<6> ap_ST_st34_fsm_33;
    static const sc_lv<6> ap_ST_st35_fsm_34;
    static const sc_lv<6> ap_ST_st36_fsm_35;
    static const sc_lv<6> ap_ST_st37_fsm_36;
    static const sc_lv<6> ap_ST_st38_fsm_37;
    static const sc_lv<6> ap_ST_st39_fsm_38;
    static const sc_lv<6> ap_ST_st40_fsm_39;
    static const sc_lv<6> ap_ST_st41_fsm_40;
    static const sc_lv<6> ap_ST_st42_fsm_41;
    static const sc_lv<6> ap_ST_st43_fsm_42;
    static const sc_lv<6> ap_ST_st44_fsm_43;
    static const sc_lv<6> ap_ST_st45_fsm_44;
    static const sc_lv<6> ap_ST_st46_fsm_45;
    static const sc_lv<6> ap_ST_st47_fsm_46;
    static const sc_lv<6> ap_ST_st48_fsm_47;
    static const sc_lv<6> ap_ST_st49_fsm_48;
    static const sc_lv<6> ap_ST_st50_fsm_49;
    static const sc_lv<6> ap_ST_pp0_stg0_fsm_50;
    static const sc_lv<6> ap_ST_st54_fsm_51;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3E8;
    static const sc_lv<32> ap_const_lv32_41200000;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_3E8;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<64> ap_const_lv64_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address();
    void thread_a_dataout();
    void thread_a_req_din();
    void thread_a_req_write();
    void thread_a_rsp_read();
    void thread_a_size();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_179();
    void thread_exitcond1_fu_314_p2();
    void thread_exitcond2_fu_370_p2();
    void thread_exitcond_fu_345_p2();
    void thread_grp_fu_265_ce();
    void thread_grp_fu_265_opcode();
    void thread_grp_fu_265_p0();
    void thread_grp_fu_265_p1();
    void thread_grp_fu_270_ce();
    void thread_grp_fu_270_p0();
    void thread_grp_fu_270_p1();
    void thread_grp_fu_275_ce();
    void thread_grp_fu_275_p0();
    void thread_grp_fu_275_p1();
    void thread_grp_fu_281_ce();
    void thread_grp_fu_281_p0();
    void thread_grp_fu_284_ce();
    void thread_grp_fu_284_p0();
    void thread_grp_fu_288_ce();
    void thread_grp_fu_288_opcode();
    void thread_grp_fu_288_p0();
    void thread_grp_fu_288_p1();
    void thread_grp_fu_294_ce();
    void thread_grp_fu_294_p0();
    void thread_grp_fu_294_p1();
    void thread_grp_fu_299_ce();
    void thread_grp_fu_299_p0();
    void thread_grp_fu_299_p1();
    void thread_indvar_next_fu_376_p2();
    void thread_isIter0_fu_387_p2();
    void thread_p_1_fu_320_p2();
    void thread_pp_1_fu_351_p2();
    void thread_thread_result_buff_address0();
    void thread_thread_result_buff_ce0();
    void thread_thread_result_buff_d0();
    void thread_thread_result_buff_we0();
    void thread_tmp_2_fu_365_p1();
    void thread_tmp_3_fu_382_p1();
    void thread_tmp_5_fu_335_p1();
    void thread_tmp_7_fu_308_p2();
    void thread_tmp_fu_326_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
