#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("kernel_u_a_0_rfir", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_current_price", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_volatility", 32, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_initial_volatility", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_volatility_volatility", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_rho", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_kappa", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_theta", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_correlation_matrix_0_0", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_correlation_matrix_0_1", 32, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_correlation_matrix_1_0", 32, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("kernel_u_a_0_correlation_matrix_1_1", 32, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_second_barrier", 32, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_barrier", 32, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_out", 32, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_down", 32, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_strike_price", 32, hls_in, 16, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_time_period", 32, hls_in, 17, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_call", 32, hls_in, 18, "ap_none", "in_data", 1),
	Port_Property("kernel_o_a_0_points", 32, hls_in, 19, "ap_none", "in_data", 1),
	Port_Property("seed_0_s1_dout", 32, hls_in, 20, "ap_fifo", "fifo_data", 0),
	Port_Property("seed_0_s1_empty_n", 1, hls_in, 20, "ap_fifo", "fifo_status", 0),
	Port_Property("seed_0_s1_read", 1, hls_out, 20, "ap_fifo", "fifo_update", 0),
	Port_Property("seed_0_s2_dout", 32, hls_in, 21, "ap_fifo", "fifo_data", 0),
	Port_Property("seed_0_s2_empty_n", 1, hls_in, 21, "ap_fifo", "fifo_status", 0),
	Port_Property("seed_0_s2_read", 1, hls_out, 21, "ap_fifo", "fifo_update", 0),
	Port_Property("seed_0_s3_dout", 32, hls_in, 22, "ap_fifo", "fifo_data", 0),
	Port_Property("seed_0_s3_empty_n", 1, hls_in, 22, "ap_fifo", "fifo_status", 0),
	Port_Property("seed_0_s3_read", 1, hls_out, 22, "ap_fifo", "fifo_update", 0),
	Port_Property("seed_0_offset_dout", 32, hls_in, 23, "ap_fifo", "fifo_data", 0),
	Port_Property("seed_0_offset_empty_n", 1, hls_in, 23, "ap_fifo", "fifo_status", 0),
	Port_Property("seed_0_offset_read", 1, hls_out, 23, "ap_fifo", "fifo_update", 0),
	Port_Property("thread_result_0_din", 32, hls_out, 24, "ap_fifo", "fifo_data", 1),
	Port_Property("thread_result_0_full_n", 1, hls_in, 24, "ap_fifo", "fifo_status", 1),
	Port_Property("thread_result_0_write", 1, hls_out, 24, "ap_fifo", "fifo_update", 1),
	Port_Property("thread_result_sqrd_0_din", 32, hls_out, 25, "ap_fifo", "fifo_data", 1),
	Port_Property("thread_result_sqrd_0_full_n", 1, hls_in, 25, "ap_fifo", "fifo_status", 1),
	Port_Property("thread_result_sqrd_0_write", 1, hls_out, 25, "ap_fifo", "fifo_update", 1),
};
const char* HLS_Design_Meta::dut_name = "vivado_activity_thread";
