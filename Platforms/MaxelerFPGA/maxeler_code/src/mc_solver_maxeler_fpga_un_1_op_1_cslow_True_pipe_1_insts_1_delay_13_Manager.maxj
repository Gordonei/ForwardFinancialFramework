import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.custom.CustomManager;
import com.maxeler.maxcompiler.v2.managers.custom.blocks.KernelBlock;
import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelConfiguration;
import com.maxeler.maxcompiler.v2.managers.custom.ManagerClock;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
public class mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Manager extends CustomManager{
	private static final int instance_paths = 1000;
	private static final int path_points = 4096;
	private static final int instances = 1;
	private static int delay = instance_paths;
	mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Manager(EngineParameters ep){
		super(ep);
		KernelConfiguration currKConf = getCurrentKernelConfig();
		currKConf.optimization.setUseGlobalClockBuffer(true);
		currKConf.optimization.setTriAddsEnabled(true);
		currKConf.optimization.setDSPMulAddChainBehavior(KernelConfiguration.OptimizationOptions.DSPMulAddChainBehaviour.OPTIMISE);
		ManagerClock clock = generateStreamClock("mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_clock",200);
		pushDefaultClock(clock);
		KernelBlock k = addKernel(new mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Kernel(makeKernelParameters("mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Kernel"),instance_paths,path_points,instances,delay));
		k.getInput("seeds_in") <== addStreamFromCPU("seeds_in");
		addStreamToCPU("values_out") <== k.getOutput("values_out");
		BuildConfig c = new BuildConfig(BuildConfig.Level.FULL_BUILD);
		c.setBuildEffort(BuildConfig.Effort.HIGH);
		c.setEnableTimingAnalysis(true);
		c.setMPPRCostTableSearchRange(1,100);
		c.setMPPRParallelism(6);
		setBuildConfig(c);
		}
	private static EngineInterface interfaceDefault(){
		EngineInterface engine_interface = new EngineInterface();
		CPUTypes inType = CPUTypes.UINT32;
		int inSize = inType.sizeInBytes()*8;
		CPUTypes outType = CPUTypes.FLOAT;
		int outSize = outType.sizeInBytes()*1;
		engine_interface.setTicks("mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Kernel",instance_paths*(path_points+1));
		engine_interface.setStream("seeds_in", inType, inSize*instance_paths);
		engine_interface.setStream("values_out", outType, outSize*instance_paths);
		return engine_interface;
		}
	public static void main(String[] args){
		mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Manager manager = new mc_solver_maxeler_fpga_un_1_op_1_cslow_True_pipe_1_insts_1_delay_13_Manager(new EngineParameters(args));
		manager.createSLiCinterface(interfaceDefault());
		manager.build();
		}
	}
